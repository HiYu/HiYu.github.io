<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222"><meta name="generator" content="Hexo 6.3.0">

  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-fanruo.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-fanruo.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha256-HtsXJanqjKTc8vVQjO4YMhiqFoXkfBsjBWcX91T1jr8=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">

<script class="next-config" data-name="main" type="application/json">{"hostname":"m.fanruo.net","root":"/","images":"/images","scheme":"Pisces","darkmode":false,"version":"8.16.0","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12},"copycode":{"enable":false,"style":null},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"stickytabs":false,"motion":{"enable":true,"async":false,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"prism":false,"i18n":{"placeholder":"搜索...","empty":"没有找到任何搜索结果：${query}","hits_time":"找到 ${hits} 个搜索结果（用时 ${time} 毫秒）","hits":"找到 ${hits} 个搜索结果"}}</script><script src="/js/config.js"></script>

    <meta name="description" content="导读：《架构设计》系列为极客时间李运华老师《从0开始学架构》课程笔记。本文为第五部分，主要介绍高可用存储架构，分别介绍了双机架构和集群架构以及各种具体方案的优缺点和应用场景。">
<meta property="og:type" content="article">
<meta property="og:title" content="架构设计 5-高可用架构之高可用存储架构">
<meta property="og:url" content="https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-5-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84">
<meta property="og:site_name" content="凡 若">
<meta property="og:description" content="导读：《架构设计》系列为极客时间李运华老师《从0开始学架构》课程笔记。本文为第五部分，主要介绍高可用存储架构，分别介绍了双机架构和集群架构以及各种具体方案的优缺点和应用场景。">
<meta property="og:locale" content="zh_CN">
<meta property="article:published_time" content="2022-05-11T14:12:52.000Z">
<meta property="article:modified_time" content="2022-05-11T15:07:28.611Z">
<meta property="article:author" content="闲余">
<meta property="article:tag" content="架构设计">
<meta property="article:tag" content="高可用架构">
<meta name="twitter:card" content="summary">


<link rel="canonical" href="https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-5-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84">



<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"zh-CN","comments":true,"permalink":"https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-5-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84","path":"/架构设计-5-高可用架构之高可用存储架构","title":"架构设计 5-高可用架构之高可用存储架构"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>架构设计 5-高可用架构之高可用存储架构 | 凡 若</title>
  








  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="切换导航栏" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">凡 若</p>
      <i class="logo-line"></i>
    </a>
      <p class="site-subtitle" itemprop="description">初心 读书 知新 生活</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="搜索" role="button">
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="home fa-fw"></i>首页</a></li><li class="menu-item menu-item-categories"><a href="/categories/" rel="section"><i class="th fa-fw"></i>分类</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="tags fa-fw"></i>标签</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="archive fa-fw"></i>归档</a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="user fa-fw"></i>关于</a></li>
  </ul>
</nav>




</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          文章目录
        </li>
        <li class="sidebar-nav-overview">
          站点概览
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%8F%8C%E6%9C%BA%E6%9E%B6%E6%9E%84"><span class="nav-number">1.</span> <span class="nav-text">双机架构</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E4%B8%BB%E5%A4%87%E5%A4%8D%E5%88%B6"><span class="nav-number">1.1.</span> <span class="nav-text">主备复制</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E4%BC%98%E7%82%B9"><span class="nav-number">1.1.1.</span> <span class="nav-text">优点</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%BC%BA%E7%82%B9"><span class="nav-number">1.1.2.</span> <span class="nav-text">缺点</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%9C%BA%E6%99%AF"><span class="nav-number">1.1.3.</span> <span class="nav-text">场景</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6"><span class="nav-number">1.2.</span> <span class="nav-text">主从复制</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E4%BC%98%E7%82%B9-1"><span class="nav-number">1.2.1.</span> <span class="nav-text">优点</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%BC%BA%E7%82%B9-1"><span class="nav-number">1.2.2.</span> <span class="nav-text">缺点</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%9C%BA%E6%99%AF-1"><span class="nav-number">1.2.3.</span> <span class="nav-text">场景</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E4%B8%BB%E4%B8%BB%E5%A4%8D%E5%88%B6"><span class="nav-number">1.3.</span> <span class="nav-text">主主复制</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E4%BC%98%E7%82%B9-2"><span class="nav-number">1.3.1.</span> <span class="nav-text">优点</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E7%BC%BA%E7%82%B9-2"><span class="nav-number">1.3.2.</span> <span class="nav-text">缺点</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%9C%BA%E6%99%AF-2"><span class="nav-number">1.3.3.</span> <span class="nav-text">场景</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%8F%8C%E6%9C%BA%E5%88%87%E6%8D%A2"><span class="nav-number">1.4.</span> <span class="nav-text">双机切换</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E8%AE%BE%E8%AE%A1%E5%85%B3%E9%94%AE"><span class="nav-number">1.4.1.</span> <span class="nav-text">设计关键</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E4%B8%BB%E5%A4%87%E5%A4%8D%E5%88%B6%E5%92%8C%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E6%96%B9%E6%A1%88%E5%85%B1%E6%80%A7%E7%9A%84%E9%97%AE%E9%A2%98"><span class="nav-number">1.4.1.1.</span> <span class="nav-text">主备复制和主从复制方案共性的问题</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%AE%8C%E5%96%84%E7%9A%84%E5%88%87%E6%8D%A2%E6%96%B9%E6%A1%88%EF%BC%8C%E5%85%B3%E9%94%AE%E8%AE%BE%E8%AE%A1%E7%82%B9"><span class="nav-number">1.4.1.2.</span> <span class="nav-text">完善的切换方案，关键设计点</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%B8%B8%E8%A7%81%E6%9E%B6%E6%9E%84"><span class="nav-number">1.4.2.</span> <span class="nav-text">常见架构</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E4%BA%92%E8%BF%9E%E5%BC%8F"><span class="nav-number">1.4.2.1.</span> <span class="nav-text">互连式</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E4%B8%AD%E4%BB%8B%E5%BC%8F"><span class="nav-number">1.4.2.2.</span> <span class="nav-text">中介式</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%A8%A1%E6%8B%9F%E5%BC%8F"><span class="nav-number">1.4.2.3.</span> <span class="nav-text">模拟式</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E9%9B%86%E7%BE%A4-amp-%E5%88%86%E5%8C%BA"><span class="nav-number">2.</span> <span class="nav-text">集群&amp;分区</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E9%9B%86%E4%B8%AD%E9%9B%86%E7%BE%A4"><span class="nav-number">2.1.</span> <span class="nav-text">集中集群</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%A4%8D%E6%9D%82%E5%BA%A6"><span class="nav-number">2.1.1.</span> <span class="nav-text">复杂度</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%88%86%E6%95%A3%E9%9B%86%E7%BE%A4"><span class="nav-number">2.2.</span> <span class="nav-text">分散集群</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%A4%8D%E6%9D%82%E5%BA%A6%EF%BC%9A"><span class="nav-number">2.2.1.</span> <span class="nav-text">复杂度：</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%95%B0%E6%8D%AE%E5%88%86%E6%95%A3%E9%9B%86%E7%BE%A4%E5%92%8C%E6%95%B0%E6%8D%AE%E9%9B%86%E4%B8%AD%E9%9B%86%E7%BE%A4%E7%9A%84%E4%B8%8D%E5%90%8C%E7%82%B9"><span class="nav-number">2.2.2.</span> <span class="nav-text">数据分散集群和数据集中集群的不同点</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%9C%BA%E6%99%AF-3"><span class="nav-number">2.2.3.</span> <span class="nav-text">场景</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E5%88%86%E5%8C%BA"><span class="nav-number">2.3.</span> <span class="nav-text">分区</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E8%AE%BE%E8%AE%A1%E4%B8%80%E4%B8%AA%E8%89%AF%E5%A5%BD%E7%9A%84%E6%95%B0%E6%8D%AE%E5%88%86%E5%8C%BA%E6%9E%B6%E6%9E%84%EF%BC%8C%E9%9C%80%E8%A6%81%E4%BB%8E%E5%A4%9A%E6%96%B9%E9%9D%A2%E5%8E%BB%E8%80%83%E8%99%91"><span class="nav-number">2.3.1.</span> <span class="nav-text">设计一个良好的数据分区架构，需要从多方面去考虑</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%95%B0%E6%8D%AE%E9%87%8F"><span class="nav-number">2.3.1.1.</span> <span class="nav-text">数据量</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%88%86%E5%8C%BA%E8%A7%84%E5%88%99"><span class="nav-number">2.3.1.2.</span> <span class="nav-text">分区规则</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E5%A4%8D%E5%88%B6%E8%A7%84%E5%88%99"><span class="nav-number">2.3.1.3.</span> <span class="nav-text">复制规则</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#reference"><span class="nav-number">3.</span> <span class="nav-text">reference</span></a></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <p class="site-author-name" itemprop="name">闲余</p>
  <div class="site-description" itemprop="description">初心 读书 知新 生活</div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">57</span>
          <span class="site-state-item-name">日志</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
          <a href="/categories/">
        <span class="site-state-item-count">8</span>
        <span class="site-state-item-name">分类</span></a>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">35</span>
        <span class="site-state-item-name">标签</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author animated">
      <span class="links-of-author-item">
        <a href="https://github.com/HiYu" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;HiYu" rel="noopener me" target="_blank"><i class="fab fa-github fa-fw"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:zhaoyyuu@gmail.com" title="E-Mail → mailto:zhaoyyuu@gmail.com" rel="noopener me" target="_blank"><i class="fa fa-envelope fa-fw"></i>E-Mail</a>
      </span>
  </div>

        </div>
      </div>
     <div class="wechat_channel">
        <br>
        <!-- 这里添加你的二维码图片 -->
        <img src ="/images/wechat.png">
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="zh-CN">
    <link itemprop="mainEntityOfPage" href="https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-5-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/avatar.gif">
      <meta itemprop="name" content="闲余">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="凡 若">
      <meta itemprop="description" content="初心 读书 知新 生活">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="架构设计 5-高可用架构之高可用存储架构 | 凡 若">
      <meta itemprop="description" content="导读：《架构设计》系列为极客时间李运华老师《从0开始学架构》课程笔记。本文为第五部分，主要介绍高可用存储架构，分别介绍了双机架构和集群架构以及各种具体方案的优缺点和应用场景。">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          架构设计 5-高可用架构之高可用存储架构
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">发表于</span>
      

      <time title="创建时间：2022-05-11 22:12:52 / 修改时间：23:07:28" itemprop="dateCreated datePublished" datetime="2022-05-11T22:12:52+08:00">2022-05-11</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-folder"></i>
      </span>
      <span class="post-meta-item-text">分类于</span>
        <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
          <a href="/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" itemprop="url" rel="index"><span itemprop="name">架构设计</span></a>
        </span>
    </span>

  
    <span class="post-meta-break"></span>
    <span class="post-meta-item" title="本文字数">
      <span class="post-meta-item-icon">
        <i class="far fa-file-word"></i>
      </span>
      <span class="post-meta-item-text">本文字数：</span>
      <span>4.6k</span>
    </span>
    <span class="post-meta-item" title="阅读时长">
      <span class="post-meta-item-icon">
        <i class="far fa-clock"></i>
      </span>
      <span class="post-meta-item-text">阅读时长 &asymp;</span>
      <span>4 分钟</span>
    </span>
</div>

            <div class="post-description">导读：《架构设计》系列为极客时间李运华老师《从0开始学架构》课程笔记。本文为第五部分，主要介绍高可用存储架构，分别介绍了双机架构和集群架构以及各种具体方案的优缺点和应用场景。</div>
        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><blockquote>
<p>扫描左侧二维码 关注公众号 回复 “架构设计” 获取架构设计笔记完整思维导图</p>
</blockquote>
<h1 id="双机架构"><a href="#双机架构" class="headerlink" title="双机架构"></a>双机架构</h1><h2 id="主备复制"><a href="#主备复制" class="headerlink" title="主备复制"></a>主备复制</h2><p>其整体架构比较简单，主备架构中的“备机”主要还是起到一个备份作用，并不承担实际的业务读写操作，如果要把备机改为主机，需要人工操作。</p>
<h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul>
<li>对于客户端来说，不需要感知备机的存在，即使灾难恢复后，原来的备机被人工修改为主机后，对于客户端来说，只是认为主机的地址换了而已，无须知道是原来的备机升级为主机。</li>
<li>对于主机和备机来说，双方只需要进行数据复制即可，无须进行状态判断和主备切换这类复杂的操作。</li>
</ul>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>备机仅仅只为备份，并没有提供读写操作，硬件成本上有浪费。</li>
<li>故障后需要人工干预，无法自动恢复。</li>
</ul>
<h3 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h3><p>主备复制是最常见也是最简单的一种存储高可用方案，几乎所有的存储系统都提供了主备复制的功能，例如 MySQL、Redis、MongoDB 等</p>
<h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><p>主机负责读写操作，从机只负责读操作，不负责写操作。</p>
<h3 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h3><ul>
<li>主从复制在主机故障时，读操作相关的业务可以继续运行。</li>
<li>主从复制架构的从机提供读操作，发挥了硬件的性能。</li>
</ul>
<h3 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>主从复制架构中，客户端需要感知主从关系，并将不同的操作发给不同的机器进行处理，复杂度比主备复制要高。</li>
<li>主从复制架构中，从机提供读业务，如果主从复制延迟比较大，业务会因为数据不一致出现问题。</li>
<li>故障时需要人工干预。</li>
</ul>
<h3 id="场景-1"><a href="#场景-1" class="headerlink" title="场景"></a>场景</h3><p>综合主从复制的优缺点，一般情况下，写少读多的业务使用主从复制的存储架构比较多。例如，论坛、BBS、新闻网站这类业务，此类业务的读操作数量是写操作数量的 10 倍甚至 100 倍以上。</p>
<h2 id="主主复制"><a href="#主主复制" class="headerlink" title="主主复制"></a>主主复制</h2><p>主主复制指的是两台机器都是主机，互相将数据复制给对方，客户端可以任意挑选其中一台机器进行读写操作。</p>
<h3 id="优点-2"><a href="#优点-2" class="headerlink" title="优点"></a>优点</h3><ul>
<li>两台都是主机，不存在切换的概念</li>
<li>客户端无须区分不同角色的主机，随便将读写操作发送给哪台主机都可以。</li>
</ul>
<h3 id="缺点-2"><a href="#缺点-2" class="headerlink" title="缺点"></a>缺点</h3><p>如果采取主主复制架构，必须保证数据能够双向复制，而很多数据是不能双向复制的，如：</p>
<ul>
<li>用户注册后生成的用户 ID，如果按照数字增长，那就不能双向复制</li>
<li>库存不能双向复制</li>
</ul>
<h3 id="场景-2"><a href="#场景-2" class="headerlink" title="场景"></a>场景</h3><p>主主复制架构对数据的设计有严格的要求，一般适合于那些临时性、可丢失、可覆盖的数据场景。例如，用户登录产生的 session 数据（可以重新登录生成）、用户行为的日志数据（可以丢失）、论坛的草稿数据（可以丢失）等。</p>
<h2 id="双机切换"><a href="#双机切换" class="headerlink" title="双机切换"></a>双机切换</h2><h3 id="设计关键"><a href="#设计关键" class="headerlink" title="设计关键"></a>设计关键</h3><h4 id="主备复制和主从复制方案共性的问题"><a href="#主备复制和主从复制方案共性的问题" class="headerlink" title="主备复制和主从复制方案共性的问题"></a>主备复制和主从复制方案共性的问题</h4><ul>
<li>主机故障后，无法进行写操作。</li>
<li>如果主机无法恢复，需要人工指定新的主机角色。</li>
</ul>
<h4 id="完善的切换方案，关键设计点"><a href="#完善的切换方案，关键设计点" class="headerlink" title="完善的切换方案，关键设计点"></a>完善的切换方案，关键设计点</h4><ul>
<li>主备间状态判断<ul>
<li>状态传递的渠道：是相互间互相连接，还是第三方仲裁？</li>
<li>状态检测的内容：例如机器是否掉电、进程是否存在、响应是否缓慢等。</li>
</ul>
</li>
<li>切换决策<ul>
<li>切换时机：什么情况下备机应该升级为主机？是机器掉电后备机才升级，还是主机上的进程不存在就升级，还是主机响应时间超过 2 秒就升级，还是 3 分钟内主机连续重启 3 次就升级等。</li>
<li>切换策略：原来的主机故障恢复后，要再次切换，确保原来的主机继续做主机，还是原来的主机故障恢复后自动成为新的备机？</li>
<li>自动程度：切换是完全自动的，还是半自动的？例如，系统判断当前需要切换，但需要人工做最终的确认操作</li>
</ul>
</li>
<li>数据冲突解决<ul>
<li>当原有故障的主机恢复后，新旧主机之间可能存在数据冲突</li>
</ul>
</li>
</ul>
<h3 id="常见架构"><a href="#常见架构" class="headerlink" title="常见架构"></a>常见架构</h3><h4 id="互连式"><a href="#互连式" class="headerlink" title="互连式"></a>互连式</h4><p>互连式就是指主备机直接建立状态传递的渠道，在主备复制的架构基础上，主机和备机多了一个“状态传递”的通道，这个通道就是用来传递状态信息的。</p>
<ul>
<li>可以是网络连接（例如，各开一个端口），也可以是非网络连接（用串口线连接）</li>
<li>可以是主机发送状态给备机，也可以是备机到主机来获取状态信息。</li>
<li>可以和数据复制通道共用，也可以独立一条通道。</li>
<li>状态传递通道可以是一条，也可以是多条，还可以是不同类型的通道混合</li>
</ul>
<p>客户端影响</p>
<ul>
<li>为了切换后不影响客户端的访问，主机和备机之间共享一个对客户端来说唯一的地址。例如虚拟 IP，主机需要绑定这个虚拟的 IP</li>
<li>客户端同时记录主备机的地址，哪个能访问就访问哪个；备机虽然能收到客户端的操作请求，但是会直接拒绝，拒绝的原因就是“备机不对外提供服务”</li>
</ul>
<p>缺点</p>
<ul>
<li>如果状态传递的通道本身有故障（例如，网线被人不小心踢掉了），那么备机也会认为主机故障了从而将自己升级为主机，而此时主机并没有故障，最终就可能出现两个主机。</li>
<li>虽然可以通过增加多个通道来增强状态传递的可靠性，但这样做只是降低了通道故障概率而已，不能从根本上解决这个缺点，而且通道越多，后续的状态决策会更加复杂，因为对备机来说，可能从不同的通道收到了不同甚至矛盾的状态信息。</li>
</ul>
<h4 id="中介式"><a href="#中介式" class="headerlink" title="中介式"></a>中介式</h4><p>中介式指的是在主备两者之外引入第三方中介，主备机之间不直接连接，而都去连接中介，并且通过中介来传递状态信息</p>
<p>优点</p>
<ul>
<li>连接管理更简单：主备机无须再建立和管理多种类型的状态传递连接通道，只要连接到中介即可，实际上是降低了主备机的连接管理复杂度。</li>
<li>状态决策更简单：主备机的状态决策简单了，无须考虑多种类型的连接通道获取的状态信息如何决策的问题，只需要按照下面简单的算法即可完成状态决策。<ul>
<li>无论是主机还是备机，初始状态都是备机，并且只要与中介断开连接，就将自己降级为备机，因此可能出现双备机的情况。</li>
<li>主机与中介断连后，中介能够立刻告知备机，备机将自己升级为主机。</li>
<li>如果是网络中断导致主机与中介断连，主机自己会降级为备机，网络恢复后，旧的主机以新的备机身份向中介上报自己的状态。</li>
<li>主备机与中介连接都正常的情况下，按照实际的状态决定是否进行切换。例如，主机响应时间超过 3 秒就进行切换，主机降级为备机，备机升级为主机即可。</li>
</ul>
</li>
</ul>
<p>缺点</p>
<ul>
<li>虽然中介式架构在状态传递和状态决策上更加简单，但并不意味着这种优点是没有代价的，其关键代价就在于如何实现中介本身的高可用。如果中介自己宕机了，整个系统就进入了双备的状态，写操作相关的业务就不可用了</li>
</ul>
<p>场景</p>
<ul>
<li>MongoDB 的 Replica Set 采取的就是这种方式</li>
<li>开源方案已经有比较成熟的中介式解决方案，例如 ZooKeeper 和 Keepalived。ZooKeeper 本身已经实现了高可用集群架构，因此已经帮我们解决了中介本身的可靠性问题，在工程实践中推荐基于 ZooKeeper 搭建中介式切换架构。</li>
</ul>
<h4 id="模拟式"><a href="#模拟式" class="headerlink" title="模拟式"></a>模拟式</h4><p>模拟式指主备机之间并不传递任何状态数据，而是备机模拟成一个客户端，向主机发起模拟的读写操作，根据读写操作的响应情况来判断主机的状态。</p>
<p>优点</p>
<ul>
<li>对比一下互连式切换架构，我们可以看到，主备机之间只有数据复制通道，而没有状态传递通道，备机通过模拟的读写操作来探测主机的状态，然后根据读写操作的响应情况来进行状态决策。</li>
<li>模拟式切换与互连式切换相比，优点是实现更加简单，因为省去了状态传递通道的建立和管理工作。</li>
</ul>
<p>缺点</p>
<ul>
<li>模拟式读写操作获取的状态信息只有响应信息（例如，HTTP 404，超时、响应时间超过 3 秒等），没有互连式那样多样（除了响应信息，还可以包含 CPU 负载、I&#x2F;O 负载、吞吐量、响应时间等），基于有限的状态来做状态决策，可能出现偏差。</li>
</ul>
<h1 id="集群-amp-分区"><a href="#集群-amp-分区" class="headerlink" title="集群&amp;分区"></a>集群&amp;分区</h1><h2 id="集中集群"><a href="#集中集群" class="headerlink" title="集中集群"></a>集中集群</h2><ul>
<li>数据集中集群与主备、主从这类架构相似，我们也可以称数据集中集群为 1 主多备或者 1 主多从</li>
<li>无论是 1 主 1 从、1 主 1 备，还是 1 主多备、1 主多从，数据都只能往主机中写，而读操作可以参考主备、主从架构进行灵活多变</li>
</ul>
<h3 id="复杂度"><a href="#复杂度" class="headerlink" title="复杂度"></a>复杂度</h3><ul>
<li>主机如何将数据复制给备机主<ul>
<li>主备和主从架构中，只有一条复制通道，而数据集中集群架构中，存在多条复制通道。</li>
<li>多条复制通道首先会增大主机复制的压力，某些场景下我们需要考虑如何降低主机复制压力，或者降低主机复制给正常读写带来的压力。</li>
<li>多条复制通道可能会导致多个备机之间数据不一致，某些场景下我们需要对备机之间的数据一致性进行检查和修正。</li>
</ul>
</li>
<li>备机如何检测主机状态<ul>
<li>在数据集中集群架构中，多台备机都需要对主机状态进行判断，而不同的备机判断的结果可能是不同的，如何处理不同备机对主机状态的不同判断，是一个复杂的问题。</li>
</ul>
</li>
<li>主机故障后，如何决定新的主机<ul>
<li>在数据集中集群架构中，有多台备机都可以升级为主机，但实际上只能允许一台备机升级为主机，那么究竟选择哪一台备机作为新的主机，备机之间如何协调，这也是一个复杂的问题。</li>
</ul>
</li>
</ul>
<h2 id="分散集群"><a href="#分散集群" class="headerlink" title="分散集群"></a>分散集群</h2><ul>
<li>数据分散集群指多个服务器组成一个集群，每台服务器都会负责存储一部分数据</li>
<li>为了提升硬件利用率，每台服务器又会备份一部分数据</li>
</ul>
<h3 id="复杂度："><a href="#复杂度：" class="headerlink" title="复杂度："></a>复杂度：</h3><p>数据分散集群的复杂点在于如何将数据分配到不同的服务器上，算法需要考虑这些设计点：</p>
<ul>
<li>均衡性：算法需要保证服务器上的数据分区基本是均衡的，不能存在某台服务器上的分区数量是另外一台服务器的几倍的情况</li>
<li>容错性：当出现部分服务器故障时，算法需要将原来分配给故障服务器的数据分区分配给其他服务器。</li>
<li>可伸缩性：当集群容量不够，扩充新的服务器后，算法能够自动将部分数据分区迁移到新服务器，并保证扩容后所有服务器的均衡性</li>
</ul>
<h3 id="数据分散集群和数据集中集群的不同点"><a href="#数据分散集群和数据集中集群的不同点" class="headerlink" title="数据分散集群和数据集中集群的不同点"></a>数据分散集群和数据集中集群的不同点</h3><ul>
<li>数据分散集群中的每台服务器都可以处理读写请求，因此不存在数据集中集群中负责写的主机那样的角色</li>
<li>数据分散集群中，必须有一个角色来负责执行数据分配算法，这个角色可以是独立的一台服务器，也可以是集群自己选举出的一台服务器</li>
<li>如果是集群服务器选举出来一台机器承担数据分区分配的职责，则这台服务器一般也会叫作主机，但我们需要知道这里的“主机”和数据集中集群中的“主机”，其职责是有差异的。</li>
<li>数据集中集群架构中，客户端只能将数据写到主机；数据分散集群架构中，客户端可以向任意服务器中读写数据</li>
</ul>
<h3 id="场景-3"><a href="#场景-3" class="headerlink" title="场景"></a>场景</h3><ul>
<li>数据集中集群适合数据量不大，集群机器数量不多的场景：ZooKeeper 集群，一般推荐 5 台机器左右，数据量是单台服务器就能够支撑；</li>
<li>数据分散集群，由于其良好的可伸缩性，适合业务数据量巨大、集群机器数量庞大的业务场景：Hadoop 集群、HBase 集群，大规模的集群可以达到上百台甚至上千台服务器。</li>
</ul>
<h2 id="分区"><a href="#分区" class="headerlink" title="分区"></a>分区</h2><p>数据分区指将数据按照一定的规则进行分区，不同分区分布在不同的地理位置上，每个分区存储一部分数据，通过这种方式来规避地理级别的故障所造成的巨大影响</p>
<h3 id="设计一个良好的数据分区架构，需要从多方面去考虑"><a href="#设计一个良好的数据分区架构，需要从多方面去考虑" class="headerlink" title="设计一个良好的数据分区架构，需要从多方面去考虑"></a>设计一个良好的数据分区架构，需要从多方面去考虑</h3><h4 id="数据量"><a href="#数据量" class="headerlink" title="数据量"></a>数据量</h4><p>数据量的大小直接决定了分区的规则复杂度</p>
<h4 id="分区规则"><a href="#分区规则" class="headerlink" title="分区规则"></a>分区规则</h4><p>地理位置有近有远，因此可以得到不同的分区规则</p>
<ul>
<li>洲际分区：主要用于面向不同大洲提供服务，由于跨洲通讯的网络延迟已经大到不适合提供在线服务了，因此洲际间的数据中心可以不互通或者仅仅作为备份</li>
<li>国家分区：主要用于面向不同国家的用户提供服务，不同国家有不同语言、法律、业务等，国家间的分区一般也仅作为备份</li>
<li>城市分区：由于都在同一个国家或者地区内，网络延迟较低，业务相似，分区同时对外提供服务，可以满足业务异地多活之类的需求</li>
</ul>
<h4 id="复制规则"><a href="#复制规则" class="headerlink" title="复制规则"></a>复制规则</h4><p>集中式：集中式备份指存在一个总的备份中心，所有的分区都将数据备份到备份中心</p>
<ul>
<li>设计简单，各分区之间并无直接联系，可以做到互不影响</li>
<li>扩展容易，如果要增加第四个分区，只需要将该分区的数据复制到已有备份中心即可，其他分区不受影响。</li>
<li>成本较高，需要建设一个独立的备份中心</li>
</ul>
<p>互备式：指每个分区备份另外一个分区的数据</p>
<ul>
<li>设计比较复杂，各个分区除了要承担业务数据存储，还需要承担备份功能，相互之间互相关联和影响。</li>
<li>扩展麻烦，新增节点需要调整已有几点</li>
<li>成本低，直接利用已有的设备。</li>
</ul>
<p>独立式：指每个分区自己有独立的备份中心，需要特别注意，各个分区的备份并不和原来的分区在一个地方</p>
<ul>
<li>设计简单，各分区互不影响。</li>
<li>扩展容易，新增加的分区只需要搭建自己的备份中心即可。</li>
<li>成本高，每个分区需要独立的备份中心，备份中心的场地成本是主要成本，因此独立式比集中式成本要高很多。</li>
</ul>
<h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol>
<li><a target="_blank" rel="noopener" href="https://time.geekbang.org/column/intro/100006601?tab=catalog">从 0 开始学架构</a></li>
</ol>

    </div>

    
    
    

    <footer class="post-footer">
          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>本文作者： </strong>闲余
  </li>
  <li class="post-copyright-link">
      <strong>本文链接：</strong>
      <a href="https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-5-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%AB%98%E5%8F%AF%E7%94%A8%E5%AD%98%E5%82%A8%E6%9E%B6%E6%9E%84" title="架构设计 5-高可用架构之高可用存储架构">https://m.fanruo.net/架构设计-5-高可用架构之高可用存储架构</a>
  </li>
  <li class="post-copyright-license">
      <strong>版权声明： </strong>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/" rel="noopener" target="_blank"><i class="fab fa-fw fa-creative-commons"></i>BY-NC-ND</a> 许可协议。转载请注明出处！
  </li>
</ul>
</div>

          <div class="post-tags">
              <a href="/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" rel="tag"># 架构设计</a>
              <a href="/tags/%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84/" rel="tag"># 高可用架构</a>
          </div>

        

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-4-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8BFMEA%E6%96%B9%E6%B3%95" rel="prev" title="架构设计 4-高可用架构之FMEA方法">
                  <i class="fa fa-chevron-left"></i> 架构设计 4-高可用架构之FMEA方法
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-6-%E9%AB%98%E5%8F%AF%E7%94%A8%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%AB%98%E5%8F%AF%E7%94%A8%E8%AE%A1%E7%AE%97%E6%9E%B6%E6%9E%84" rel="next" title="架构设计 6-高可用架构之高可用计算架构">
                  架构设计 6-高可用架构之高可用计算架构 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






    <div class="comments gitalk-container"></div>
</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">


<div class="copyright">
  &copy; 
  <span itemprop="copyrightYear">2023</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">闲余</span>
</div>
<div class="wordcount">
  <span class="post-meta-item">
    <span class="post-meta-item-icon">
      <i class="fa fa-chart-line"></i>
    </span>
    <span title="站点总字数">116k</span>
  </span>
  <span class="post-meta-item">
    <span class="post-meta-item-icon">
      <i class="fa fa-coffee"></i>
    </span>
    <span title="站点阅读时长">1:46</span>
  </span>
</div>
  <div class="powered-by">由 <a href="https://hexo.io/" rel="noopener" target="_blank">Hexo</a> & <a href="https://theme-next.js.org/pisces/" rel="noopener" target="_blank">NexT.Pisces</a> 强力驱动
  </div>

    </div>
  </footer>

  
  <div class="back-to-top" role="button" aria-label="返回顶部">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/next-boot.js"></script>

  





  




<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.css" integrity="sha256-AJnUHL7dBv6PGaeyPQJcgQPDjt/Hn/PvYZde1iqfp8U=" crossorigin="anonymous">

<script class="next-config" data-name="gitalk" type="application/json">{"enable":true,"github_id":"HiYu","repo":"HiYu.github.io","client_id":"f2b3a11984c32f7b9148","client_secret":"455bc8ef7a292a46b430a5d965652175b57eaced","admin_user":"HiYu","distraction_free_mode":true,"proxy":"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token","language":"en | es-ES | fr | ru | zh-CN | zh-TW","js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.min.js","integrity":"sha256-MVK9MGD/XJaGyIghSVrONSnoXoGh3IFxLw0zfvzpxR4="},"path_md5":"234b85f3180c0a700d76329c370bac8d"}</script>
<script src="/js/third-party/comments/gitalk.js"></script>

</body>
</html>
