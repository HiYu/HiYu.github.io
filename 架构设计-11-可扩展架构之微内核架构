<!DOCTYPE html>
<html lang="zh-CN">
<head>
  <meta charset="UTF-8">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#222"><meta name="generator" content="Hexo 6.3.0">

  <link rel="apple-touch-icon" sizes="180x180" href="/images/apple-touch-icon-next.png">
  <link rel="icon" type="image/png" sizes="32x32" href="/images/favicon-32x32-fanruo.png">
  <link rel="icon" type="image/png" sizes="16x16" href="/images/favicon-16x16-fanruo.png">
  <link rel="mask-icon" href="/images/logo.svg" color="#222">

<link rel="stylesheet" href="/css/main.css">



<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" integrity="sha256-HtsXJanqjKTc8vVQjO4YMhiqFoXkfBsjBWcX91T1jr8=" crossorigin="anonymous">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.1.1/animate.min.css" integrity="sha256-PR7ttpcvz8qrF57fur/yAx1qXMFJeJFiA6pSzWi0OIE=" crossorigin="anonymous">

<script class="next-config" data-name="main" type="application/json">{"hostname":"m.fanruo.net","root":"/","images":"/images","scheme":"Pisces","darkmode":false,"version":"8.16.0","exturl":false,"sidebar":{"position":"left","display":"post","padding":18,"offset":12},"copycode":{"enable":false,"style":null},"bookmark":{"enable":false,"color":"#222","save":"auto"},"mediumzoom":false,"lazyload":false,"pangu":false,"comments":{"style":"tabs","active":null,"storage":true,"lazyload":false,"nav":null},"stickytabs":false,"motion":{"enable":true,"async":false,"transition":{"menu_item":"fadeInDown","post_block":"fadeIn","post_header":"fadeInDown","post_body":"fadeInDown","coll_header":"fadeInLeft","sidebar":"fadeInUp"}},"prism":false,"i18n":{"placeholder":"搜索...","empty":"没有找到任何搜索结果：${query}","hits_time":"找到 ${hits} 个搜索结果（用时 ${time} 毫秒）","hits":"找到 ${hits} 个搜索结果"}}</script><script src="/js/config.js"></script>

    <meta name="description" content="导读：《架构设计》系列为极客时间李运华老师《从0开始学架构》课程笔记。本文为第十一部分。主要介绍了如何面向功能拆分架构，首先介绍了微内核架构的基本架构设计，以及几种常见架构的实现与特点。最后分享了微内核架构典型开源规则引擎 JBoss Drools。">
<meta property="og:type" content="article">
<meta property="og:title" content="架构设计 11-可扩展架构之微内核架构">
<meta property="og:url" content="https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-11-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84%E4%B9%8B%E5%BE%AE%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84">
<meta property="og:site_name" content="凡 若">
<meta property="og:description" content="导读：《架构设计》系列为极客时间李运华老师《从0开始学架构》课程笔记。本文为第十一部分。主要介绍了如何面向功能拆分架构，首先介绍了微内核架构的基本架构设计，以及几种常见架构的实现与特点。最后分享了微内核架构典型开源规则引擎 JBoss Drools。">
<meta property="og:locale" content="zh_CN">
<meta property="article:published_time" content="2022-05-17T02:04:17.000Z">
<meta property="article:modified_time" content="2022-05-18T11:42:07.351Z">
<meta property="article:author" content="闲余">
<meta property="article:tag" content="架构设计">
<meta property="article:tag" content="可扩展架构">
<meta name="twitter:card" content="summary">


<link rel="canonical" href="https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-11-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84%E4%B9%8B%E5%BE%AE%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84">



<script class="next-config" data-name="page" type="application/json">{"sidebar":"","isHome":false,"isPost":true,"lang":"zh-CN","comments":true,"permalink":"https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-11-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84%E4%B9%8B%E5%BE%AE%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84","path":"/架构设计-11-可扩展架构之微内核架构","title":"架构设计 11-可扩展架构之微内核架构"}</script>

<script class="next-config" data-name="calendar" type="application/json">""</script>
<title>架构设计 11-可扩展架构之微内核架构 | 凡 若</title>
  








  <noscript>
    <link rel="stylesheet" href="/css/noscript.css">
  </noscript>
</head>

<body itemscope itemtype="http://schema.org/WebPage" class="use-motion">
  <div class="headband"></div>

  <main class="main">
    <div class="column">
      <header class="header" itemscope itemtype="http://schema.org/WPHeader"><div class="site-brand-container">
  <div class="site-nav-toggle">
    <div class="toggle" aria-label="切换导航栏" role="button">
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
        <span class="toggle-line"></span>
    </div>
  </div>

  <div class="site-meta">

    <a href="/" class="brand" rel="start">
      <i class="logo-line"></i>
      <p class="site-title">凡 若</p>
      <i class="logo-line"></i>
    </a>
      <p class="site-subtitle" itemprop="description">初心 读书 知新 生活</p>
  </div>

  <div class="site-nav-right">
    <div class="toggle popup-trigger" aria-label="搜索" role="button">
    </div>
  </div>
</div>



<nav class="site-nav">
  <ul class="main-menu menu"><li class="menu-item menu-item-home"><a href="/" rel="section"><i class="home fa-fw"></i>首页</a></li><li class="menu-item menu-item-categories"><a href="/categories/" rel="section"><i class="th fa-fw"></i>分类</a></li><li class="menu-item menu-item-tags"><a href="/tags/" rel="section"><i class="tags fa-fw"></i>标签</a></li><li class="menu-item menu-item-archives"><a href="/archives/" rel="section"><i class="archive fa-fw"></i>归档</a></li><li class="menu-item menu-item-about"><a href="/about/" rel="section"><i class="user fa-fw"></i>关于</a></li>
  </ul>
</nav>




</header>
        
  
  <aside class="sidebar">

    <div class="sidebar-inner sidebar-nav-active sidebar-toc-active">
      <ul class="sidebar-nav">
        <li class="sidebar-nav-toc">
          文章目录
        </li>
        <li class="sidebar-nav-overview">
          站点概览
        </li>
      </ul>

      <div class="sidebar-panel-container">
        <!--noindex-->
        <div class="post-toc-wrap sidebar-panel">
            <div class="post-toc animated"><ol class="nav"><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%9F%BA%E6%9C%AC%E6%9E%B6%E6%9E%84"><span class="nav-number">1.</span> <span class="nav-text">基本架构</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#%E4%B8%A4%E7%B1%BB%E7%BB%84%E4%BB%B6"><span class="nav-number">1.1.</span> <span class="nav-text">两类组件</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F%EF%BC%88core-system%EF%BC%89"><span class="nav-number">1.1.1.</span> <span class="nav-text">核心系统（core system）</span></a></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1"><span class="nav-number">1.2.</span> <span class="nav-text">核心系统设计</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86"><span class="nav-number">1.2.1.</span> <span class="nav-text">插件管理</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8F%92%E4%BB%B6%E8%BF%9E%E6%8E%A5"><span class="nav-number">1.2.2.</span> <span class="nav-text">插件连接</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E6%8F%92%E4%BB%B6%E9%80%9A%E4%BF%A1"><span class="nav-number">1.2.3.</span> <span class="nav-text">插件通信</span></a></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E5%B8%B8%E8%A7%81%E6%9E%B6%E6%9E%84"><span class="nav-number">2.</span> <span class="nav-text">常见架构</span></a><ol class="nav-child"><li class="nav-item nav-level-2"><a class="nav-link" href="#OSGi-%E6%9E%B6%E6%9E%84"><span class="nav-number">2.1.</span> <span class="nav-text">OSGi 架构</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E9%80%BB%E8%BE%91%E6%9E%B6%E6%9E%84"><span class="nav-number">2.1.1.</span> <span class="nav-text">逻辑架构</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%A8%A1%E5%9D%97%E5%B1%82%EF%BC%88Module-%E5%B1%82%EF%BC%89"><span class="nav-number">2.1.1.1.</span> <span class="nav-text">模块层（Module 层）</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%B1%82%EF%BC%88Lifecycle-%E5%B1%82%EF%BC%89"><span class="nav-number">2.1.1.2.</span> <span class="nav-text">生命周期层（Lifecycle 层）</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%9C%8D%E5%8A%A1%E5%B1%82%EF%BC%88Service-%E5%B1%82%EF%BC%89"><span class="nav-number">2.1.1.3.</span> <span class="nav-text">服务层（Service 层）</span></a></li></ol></li></ol></li><li class="nav-item nav-level-2"><a class="nav-link" href="#%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8E%E6%9E%B6%E6%9E%84"><span class="nav-number">2.2.</span> <span class="nav-text">规则引擎架构</span></a><ol class="nav-child"><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%9F%BA%E6%9C%AC%E6%9E%B6%E6%9E%84-1"><span class="nav-number">2.2.1.</span> <span class="nav-text">基本架构</span></a></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%AE%9E%E7%8E%B0"><span class="nav-number">2.2.2.</span> <span class="nav-text">实现</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86-1"><span class="nav-number">2.2.2.1.</span> <span class="nav-text">插件管理</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%8F%92%E4%BB%B6%E8%BF%9E%E6%8E%A5-1"><span class="nav-number">2.2.2.2.</span> <span class="nav-text">插件连接</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E6%8F%92%E4%BB%B6%E9%80%9A%E4%BF%A1-1"><span class="nav-number">2.2.2.3.</span> <span class="nav-text">插件通信</span></a></li></ol></li><li class="nav-item nav-level-3"><a class="nav-link" href="#%E5%BC%80%E6%BA%90%E8%A7%84%E5%88%99%E5%BC%95%E6%93%8E-JBoss-Drools"><span class="nav-number">2.2.3.</span> <span class="nav-text">开源规则引擎 JBoss Drools</span></a><ol class="nav-child"><li class="nav-item nav-level-4"><a class="nav-link" href="#%E4%BC%98%E7%82%B9"><span class="nav-number">2.2.3.1.</span> <span class="nav-text">优点</span></a></li><li class="nav-item nav-level-4"><a class="nav-link" href="#%E7%BC%BA%E7%82%B9"><span class="nav-number">2.2.3.2.</span> <span class="nav-text">缺点</span></a></li></ol></li></ol></li></ol></li><li class="nav-item nav-level-1"><a class="nav-link" href="#%E4%B8%AA%E4%BA%BA%E6%80%9D%E8%80%83"><span class="nav-number">3.</span> <span class="nav-text">个人思考</span></a></li><li class="nav-item nav-level-1"><a class="nav-link" href="#reference"><span class="nav-number">4.</span> <span class="nav-text">reference</span></a></li></ol></div>
        </div>
        <!--/noindex-->

        <div class="site-overview-wrap sidebar-panel">
          <div class="site-author animated" itemprop="author" itemscope itemtype="http://schema.org/Person">
  <p class="site-author-name" itemprop="name">闲余</p>
  <div class="site-description" itemprop="description">初心 读书 知新 生活</div>
</div>
<div class="site-state-wrap animated">
  <nav class="site-state">
      <div class="site-state-item site-state-posts">
        <a href="/archives/">
          <span class="site-state-item-count">57</span>
          <span class="site-state-item-name">日志</span>
        </a>
      </div>
      <div class="site-state-item site-state-categories">
          <a href="/categories/">
        <span class="site-state-item-count">8</span>
        <span class="site-state-item-name">分类</span></a>
      </div>
      <div class="site-state-item site-state-tags">
          <a href="/tags/">
        <span class="site-state-item-count">35</span>
        <span class="site-state-item-name">标签</span></a>
      </div>
  </nav>
</div>
  <div class="links-of-author animated">
      <span class="links-of-author-item">
        <a href="https://github.com/HiYu" title="GitHub → https:&#x2F;&#x2F;github.com&#x2F;HiYu" rel="noopener me" target="_blank"><i class="fab fa-github fa-fw"></i>GitHub</a>
      </span>
      <span class="links-of-author-item">
        <a href="mailto:zhaoyyuu@gmail.com" title="E-Mail → mailto:zhaoyyuu@gmail.com" rel="noopener me" target="_blank"><i class="fa fa-envelope fa-fw"></i>E-Mail</a>
      </span>
  </div>

        </div>
      </div>
     <div class="wechat_channel">
        <br>
        <!-- 这里添加你的二维码图片 -->
        <img src ="/images/wechat.png">
      </div>
    </div>

    
  </aside>


    </div>

    <div class="main-inner post posts-expand">


  


<div class="post-block">
  
  

  <article itemscope itemtype="http://schema.org/Article" class="post-content" lang="zh-CN">
    <link itemprop="mainEntityOfPage" href="https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-11-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84%E4%B9%8B%E5%BE%AE%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84">

    <span hidden itemprop="author" itemscope itemtype="http://schema.org/Person">
      <meta itemprop="image" content="/images/avatar.gif">
      <meta itemprop="name" content="闲余">
    </span>

    <span hidden itemprop="publisher" itemscope itemtype="http://schema.org/Organization">
      <meta itemprop="name" content="凡 若">
      <meta itemprop="description" content="初心 读书 知新 生活">
    </span>

    <span hidden itemprop="post" itemscope itemtype="http://schema.org/CreativeWork">
      <meta itemprop="name" content="架构设计 11-可扩展架构之微内核架构 | 凡 若">
      <meta itemprop="description" content="导读：《架构设计》系列为极客时间李运华老师《从0开始学架构》课程笔记。本文为第十一部分。主要介绍了如何面向功能拆分架构，首先介绍了微内核架构的基本架构设计，以及几种常见架构的实现与特点。最后分享了微内核架构典型开源规则引擎 JBoss Drools。">
    </span>
      <header class="post-header">
        <h1 class="post-title" itemprop="name headline">
          架构设计 11-可扩展架构之微内核架构
        </h1>

        <div class="post-meta-container">
          <div class="post-meta">
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar"></i>
      </span>
      <span class="post-meta-item-text">发表于</span>

      <time title="创建时间：2022-05-17 10:04:17" itemprop="dateCreated datePublished" datetime="2022-05-17T10:04:17+08:00">2022-05-17</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-calendar-check"></i>
      </span>
      <span class="post-meta-item-text">更新于</span>
      <time title="修改时间：2022-05-18 19:42:07" itemprop="dateModified" datetime="2022-05-18T19:42:07+08:00">2022-05-18</time>
    </span>
    <span class="post-meta-item">
      <span class="post-meta-item-icon">
        <i class="far fa-folder"></i>
      </span>
      <span class="post-meta-item-text">分类于</span>
        <span itemprop="about" itemscope itemtype="http://schema.org/Thing">
          <a href="/categories/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" itemprop="url" rel="index"><span itemprop="name">架构设计</span></a>
        </span>
    </span>

  
    <span class="post-meta-break"></span>
    <span class="post-meta-item" title="本文字数">
      <span class="post-meta-item-icon">
        <i class="far fa-file-word"></i>
      </span>
      <span class="post-meta-item-text">本文字数：</span>
      <span>2.2k</span>
    </span>
    <span class="post-meta-item" title="阅读时长">
      <span class="post-meta-item-icon">
        <i class="far fa-clock"></i>
      </span>
      <span class="post-meta-item-text">阅读时长 &asymp;</span>
      <span>2 分钟</span>
    </span>
</div>

            <div class="post-description">导读：《架构设计》系列为极客时间李运华老师《从0开始学架构》课程笔记。本文为第十一部分。主要介绍了如何面向功能拆分架构，首先介绍了微内核架构的基本架构设计，以及几种常见架构的实现与特点。最后分享了微内核架构典型开源规则引擎 JBoss Drools。</div>
        </div>
      </header>

    
    
    
    <div class="post-body" itemprop="articleBody"><blockquote>
<p>扫描左侧二维码 关注公众号 回复 “架构设计” 获取架构设计笔记完整思维导图</p>
</blockquote>
<h1 id="基本架构"><a href="#基本架构" class="headerlink" title="基本架构"></a>基本架构</h1><h2 id="两类组件"><a href="#两类组件" class="headerlink" title="两类组件"></a>两类组件</h2><h3 id="核心系统（core-system）"><a href="#核心系统（core-system）" class="headerlink" title="核心系统（core system）"></a>核心系统（core system）</h3><p>负责和具体业务功能无关的通用功能：</p>
<ul>
<li>模块加载</li>
<li>模块间通信</li>
</ul>
<p>插件模块（plug-in modules）：负责实现具体的业务逻辑</p>
<h2 id="核心系统设计"><a href="#核心系统设计" class="headerlink" title="核心系统设计"></a>核心系统设计</h2><h3 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h3><ul>
<li>核心系统需要知道当前有哪些插件可用，如何加载这些插件，什么时候加载插件。常见的实现方法是插件注册表机制。</li>
<li>核心系统提供插件注册表（可以是配置文件，也可以是代码，还可以是数据库），插件注册表含有每个插件模块的信息，包括它的名字、位置、加载时机（启动就加载，还是按需加载）等。</li>
</ul>
<h3 id="插件连接"><a href="#插件连接" class="headerlink" title="插件连接"></a>插件连接</h3><ul>
<li>插件连接指插件如何连接到核心系统。通常来说，核心系统必须制定插件和核心系统的连接规范，然后插件按照规范实现，核心系统按照规范加载即可。</li>
<li>常见的连接机制有 OSGi（Eclipse 使用）、消息模式、依赖注入（Spring 使用），甚至使用分布式的协议都是可以的，比如 RPC 或者 HTTP Web 的方式。</li>
</ul>
<h3 id="插件通信"><a href="#插件通信" class="headerlink" title="插件通信"></a>插件通信</h3><ul>
<li>插件通信指插件间的通信。虽然设计的时候插件间是完全解耦的，但实际业务运行过程中，必然会出现某个业务流程需要多个插件协作，这就要求两个插件间进行通信。</li>
<li>微内核的核心系统也必须提供类似的通信机制，各个插件之间才能进行正常的通信。</li>
</ul>
<h1 id="常见架构"><a href="#常见架构" class="headerlink" title="常见架构"></a>常见架构</h1><h2 id="OSGi-架构"><a href="#OSGi-架构" class="headerlink" title="OSGi 架构"></a>OSGi 架构</h2><p> OSGi 的全称是 Open Services Gateway initiative，本身其实是指 OSGi Alliance。OSGi 联盟的初始目标是构建一个在广域网和局域网或设备上展开业务的基础平台，所以 OSGi 的最早设计也是针对嵌入式应用的。现在我们谈论 OSGi，已经和嵌入式应用关联不大了，更多是将 OSGi 当作一个微内核的架构模式。</p>
<h3 id="逻辑架构"><a href="#逻辑架构" class="headerlink" title="逻辑架构"></a>逻辑架构</h3><h4 id="模块层（Module-层）"><a href="#模块层（Module-层）" class="headerlink" title="模块层（Module 层）"></a>模块层（Module 层）</h4><ul>
<li>模块层实现插件管理功能。</li>
<li>OSGi 中，插件被称为 Bundle，每个 Bundle 是一个 Java 的 JAR 文件，每个 Bundle 里面都包含一个元数据文件 MANIFEST.MF，这个文件包含了 Bundle 的基本信息</li>
</ul>
<h4 id="生命周期层（Lifecycle-层）"><a href="#生命周期层（Lifecycle-层）" class="headerlink" title="生命周期层（Lifecycle 层）"></a>生命周期层（Lifecycle 层）</h4><ul>
<li>生命周期层实现插件连接功能，提供了执行时模块管理、模块对底层 OSGi 框架的访问。</li>
<li>生命周期层精确地定义了 Bundle 生命周期的操作（安装、更新、启动、停止、卸载），Bundle 必须按照规范实现各个操作。</li>
</ul>
<h4 id="服务层（Service-层）"><a href="#服务层（Service-层）" class="headerlink" title="服务层（Service 层）"></a>服务层（Service 层）</h4><ul>
<li>服务层实现插件通信的功能。</li>
<li>OSGi 提供了一个服务注册的功能，用于各个插件将自己能提供的服务注册到 OSGi 核心的服务注册中心，如果某个服务想用其他服务，则直接在服务注册中心搜索可用服务中心就可以了。</li>
</ul>
<h2 id="规则引擎架构"><a href="#规则引擎架构" class="headerlink" title="规则引擎架构"></a>规则引擎架构</h2><p>规则引擎从结构上来看也属于微内核架构的一种具体实现，其中执行引擎可以看作是微内核，执行引擎解析配置好的业务流，执行其中的条件和规则，通过这种方式来支持业务的灵活多变。特点：</p>
<ul>
<li>可扩展：通过引入规则引擎，业务逻辑实现与业务系统分离，可以在不改动业务系统的情况下扩展新的业务功能。</li>
<li>易理解：规则通过自然语言描述，业务人员易于理解和操作，而不像代码那样只有程序员才能理解和开发。</li>
<li>高效率：规则引擎系统一般提供可视化的规则定制、审批、查询及管理，方便业务人员快速配置新的业务。</li>
</ul>
<h3 id="基本架构-1"><a href="#基本架构-1" class="headerlink" title="基本架构"></a>基本架构</h3><ul>
<li>开发人员将业务功能分解提炼为多个规则，将规则保存在规则库中。</li>
<li>业务人员根据业务需要，通过将规则排列组合，配置成业务流程，保存在业务库中。</li>
<li>规则引擎执行业务流程实现业务功能。</li>
</ul>
<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3><h4 id="插件管理-1"><a href="#插件管理-1" class="headerlink" title="插件管理"></a>插件管理</h4><ul>
<li>规则引擎中的规则就是微内核架构的插件，引擎就是微内核架构的内核。规则可以被引擎加载和执行。</li>
<li>规则引擎架构中，规则一般保存在规则库中，通常使用数据库来存储。</li>
</ul>
<h4 id="插件连接-1"><a href="#插件连接-1" class="headerlink" title="插件连接"></a>插件连接</h4><p>类似于程序员开发的时候需要采用 Java、C++ 等语言，规则引擎也规定了规则开发的语言，业务人员需要基于规则语言来编写规则文件，然后由规则引擎加载执行规则文件来完成业务功能，因此，规则引擎的插件连接实现机制其实就是规则语言。</p>
<h4 id="插件通信-1"><a href="#插件通信-1" class="headerlink" title="插件通信"></a>插件通信</h4><p>规则引擎的规则之间进行通信的方式就是数据流和事件流，由于单个规则并不需要依赖其他规则，因此规则之间没有主动的通信，规则只需要输出数据或者事件，由引擎将数据或者事件传递到下一个规则。</p>
<h3 id="开源规则引擎-JBoss-Drools"><a href="#开源规则引擎-JBoss-Drools" class="headerlink" title="开源规则引擎 JBoss Drools"></a>开源规则引擎 JBoss Drools</h3><p>采用 Java 语言编写，基于 Rete 算法。</p>
<h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul>
<li>非常活跃的社区支持，以及广泛的应用。</li>
<li>快速的执行速度。</li>
<li>与 Java Rule Engine API（JSR-94）兼容。</li>
<li>提供了基于 Web 的 BRMS——Guvnor，Guvnor 提供了规则管理的知识库，通过它可以实现规则的版本控制，以及规则的在线修改与编译，使得开发人员和系统管理人员可以在线管理业务规则。</li>
</ul>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><p>虽然 Drools 号称简单易用，但实际上其规则语言还是和编程语言比较类似，在实际应用的时候普通业务人员面对这样的规则语言，学习成本和理解成本还是比较高的</p>
<h1 id="个人思考"><a href="#个人思考" class="headerlink" title="个人思考"></a>个人思考</h1><p>当成我所负责的广告服务特点比较明显——接入端多、场景多。那么这种微内核架构就比较合适，将核心的处理逻辑抽象出来，场景插件化，然后通过统一数据层将多端接入引入的协议差异打平，能够快速支持新端、新场景。<br>此外，一些框架、平台类型的服务，个人理解都是这中架构，将核心逻辑抽象化，具体功能插件化，按照核心框架提供的插件规范实现所需功能的插件即可，典型的如：Nginx等。</p>
<h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><ol>
<li>《从 0 开始学架构》 <a target="_blank" rel="noopener" href="https://time.geekbang.org/column/intro/100006601?tab=catalog">https://time.geekbang.org/column/intro/100006601?tab=catalog</a></li>
</ol>

    </div>

    
    
    

    <footer class="post-footer">
          

<div class="post-copyright">
<ul>
  <li class="post-copyright-author">
      <strong>本文作者： </strong>闲余
  </li>
  <li class="post-copyright-link">
      <strong>本文链接：</strong>
      <a href="https://m.fanruo.net/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-11-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84%E4%B9%8B%E5%BE%AE%E5%86%85%E6%A0%B8%E6%9E%B6%E6%9E%84" title="架构设计 11-可扩展架构之微内核架构">https://m.fanruo.net/架构设计-11-可扩展架构之微内核架构</a>
  </li>
  <li class="post-copyright-license">
      <strong>版权声明： </strong>本博客所有文章除特别声明外，均采用 <a href="https://creativecommons.org/licenses/by-nc-nd/4.0/" rel="noopener" target="_blank"><i class="fab fa-fw fa-creative-commons"></i>BY-NC-ND</a> 许可协议。转载请注明出处！
  </li>
</ul>
</div>

          <div class="post-tags">
              <a href="/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/" rel="tag"># 架构设计</a>
              <a href="/tags/%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84/" rel="tag"># 可扩展架构</a>
          </div>

        

          <div class="post-nav">
            <div class="post-nav-item">
                <a href="/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-10-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%9E%B6%E6%9E%84%E4%B9%8B%E9%9D%A2%E5%90%91%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E6%9E%B6%E6%9E%84" rel="prev" title="架构设计 10-可扩展架构之面向服务拆分架构">
                  <i class="fa fa-chevron-left"></i> 架构设计 10-可扩展架构之面向服务拆分架构
                </a>
            </div>
            <div class="post-nav-item">
                <a href="/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1-12-%E6%9E%B6%E6%9E%84%E5%AE%9E%E6%88%98%E4%B9%8B%E6%8A%80%E6%9C%AF%E6%BC%94%E8%BF%9B" rel="next" title="架构设计 12-架构实战之技术演进">
                  架构设计 12-架构实战之技术演进 <i class="fa fa-chevron-right"></i>
                </a>
            </div>
          </div>
    </footer>
  </article>
</div>






    <div class="comments gitalk-container"></div>
</div>
  </main>

  <footer class="footer">
    <div class="footer-inner">


<div class="copyright">
  &copy; 
  <span itemprop="copyrightYear">2023</span>
  <span class="with-love">
    <i class="fa fa-heart"></i>
  </span>
  <span class="author" itemprop="copyrightHolder">闲余</span>
</div>
<div class="wordcount">
  <span class="post-meta-item">
    <span class="post-meta-item-icon">
      <i class="fa fa-chart-line"></i>
    </span>
    <span title="站点总字数">116k</span>
  </span>
  <span class="post-meta-item">
    <span class="post-meta-item-icon">
      <i class="fa fa-coffee"></i>
    </span>
    <span title="站点阅读时长">1:46</span>
  </span>
</div>
  <div class="powered-by">由 <a href="https://hexo.io/" rel="noopener" target="_blank">Hexo</a> & <a href="https://theme-next.js.org/pisces/" rel="noopener" target="_blank">NexT.Pisces</a> 强力驱动
  </div>

    </div>
  </footer>

  
  <div class="back-to-top" role="button" aria-label="返回顶部">
    <i class="fa fa-arrow-up fa-lg"></i>
    <span>0%</span>
  </div>

<noscript>
  <div class="noscript-warning">Theme NexT works best with JavaScript enabled</div>
</noscript>


  
  <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js" integrity="sha256-XL2inqUJaslATFnHdJOi9GfQ60on8Wx1C2H8DYiN1xY=" crossorigin="anonymous"></script>
<script src="/js/comments.js"></script><script src="/js/utils.js"></script><script src="/js/motion.js"></script><script src="/js/next-boot.js"></script>

  





  




<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.css" integrity="sha256-AJnUHL7dBv6PGaeyPQJcgQPDjt/Hn/PvYZde1iqfp8U=" crossorigin="anonymous">

<script class="next-config" data-name="gitalk" type="application/json">{"enable":true,"github_id":"HiYu","repo":"HiYu.github.io","client_id":"f2b3a11984c32f7b9148","client_secret":"455bc8ef7a292a46b430a5d965652175b57eaced","admin_user":"HiYu","distraction_free_mode":true,"proxy":"https://cors-anywhere.azm.workers.dev/https://github.com/login/oauth/access_token","language":"en | es-ES | fr | ru | zh-CN | zh-TW","js":{"url":"https://cdnjs.cloudflare.com/ajax/libs/gitalk/1.8.0/gitalk.min.js","integrity":"sha256-MVK9MGD/XJaGyIghSVrONSnoXoGh3IFxLw0zfvzpxR4="},"path_md5":"6ccb7ef5aea564a0358eccf2e22e5746"}</script>
<script src="/js/third-party/comments/gitalk.js"></script>

</body>
</html>
